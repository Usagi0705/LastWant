@model IEnumerable<WantTask.ViewModels.CApproveViewModel>

<head>

</head>


<body>  

                            <div class="table-responsive mb-4">
                                        <table class="table table-hover table align-middle datatable dt-responsive table-check nowrap" style="border-collapse: collapse; border-spacing: 0 8px; width: 100%;">
                                            <thead>
                                                <tr>

                                                <th style="width: 30px;">序號</th>
                                                <th style="width: 100px;">投遞任務</th>
                                                <th style="width: 80px;">申請人名稱</th>
                                                <th style="width: 100px;">履歷內容</th>
                                                @*<th style="width: 50px;">語言</th>*@
                                                <th style="width: 50px;">證照</th>
                                                <th style="width: 50px;">技能</th>
                                                <th style="width: 50px;">查看</th>

                                                </tr>
                                            </thead>
                                            <tbody>
                                            @{

                                                //NewIspanProjectContext _context = new NewIspanProjectContext();
                                                
                                                ////var q = from app in _context.ApplicationLists.AsEnumerable()
                                                ////        where app.CaseStatusId == 1
                                                ////        select app;

                                                //var query =( from app in _context.ApplicationLists                                                         

                                                //            join task in _context.TaskLists on app.CaseId equals task.CaseId
                                                //            join resume in _context.Resumes on app.ResumeId equals resume.ResumeId
                                                //            join member in _context.MemberAccounts on resume.AccountId equals member.AccountId
                                                //            join resumeskill in _context.ResumeSkills on resume.ResumeId equals resumeskill.ResumeId
                                                //            join skill in _context.Skills on resumeskill.SkillId equals skill.SkillId
                                                //            join resumecer in _context.ResumeCertificates on resume.ResumeId equals resumecer.ResumeId
                                                //            join cer in _context.Certificates on resumecer.CertificateId equals cer.CertificateId                                                 

                                                //            where app.CaseStatusId == 1 
                                                           

                                                //            select new 
                                                //            {
                                                //                CaseId = task.CaseId,
                                                //                ResumeId = resume.ResumeId,
                                                //                TaskNameId = task.TaskNameId,
                                                //                CaseStatusId = app.CaseStatusId,
                                                //                Name = member.Name,
                                                //                SkillName = skill.SkillName,
                                                //                CertificateName = cer.CertificateName,
                                                //                Autobiography = resume.Autobiography,
                                                //                PublishStart = task.PublishStart,
                                                //                TaskStart = task.TaskStartDate,
                                                //                TaskTitle = task.TaskTitle,
                                                //                TaskDetail = task.TaskDetail
                                                //            }).Distinct();

                   
                                                int count=0;

                                                foreach (var item in Model)
                                                {
                                                     int maxDisplayLength = 10; // 設定要顯示的最大字數
                                                    string autobiography = item.Autobiography;

                                                    if (autobiography.Length > maxDisplayLength)
                                                    {
                                                        autobiography = autobiography.Substring(0, maxDisplayLength) + " ..."; // 截斷字串
                                                    }
                                                    count++;

                                                <tr data-id="1">
                                                    <td data-field="id">@count</td>
                                                        <td data-field="name"> @Html.DisplayFor(modelItem => item.TaskTitle)</td>
                                                        <td data-field="name"> @Html.DisplayFor(modelItem => item.Name)</td>
                                                        <td data-field="age">@Html.DisplayFor(modelItem => item.Autobiography)</td>
                                                        @*<td data-field="gender">@Html.DisplayFor(modelItem => taskDetail)</td>*@
                                                        <td>
                                                            <div class="d-flex gap-2">
                                                                <a href="#" class="badge badge-soft-primary">@Html.DisplayFor(modelItem => item.CertificateName)</a>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex gap-2">
                                                                <a href="#" class="badge badge-soft-primary">@Html.DisplayFor(modelItem => item.SkillName)</a>
                                                            </div>
                                                        </td>
                                                        <td style="width: 100px">
                                                          <a title="Edit" href="@Url.Content("~/backstage/ResumeUneditable")?id=@item.ResumeId">
                                                         <img src="~/backstage1/img/magnifying.png" alt="查看" style="height: 25px; width: 25px;">
                                                           </a>
                                                        </td>
                                                </tr>
                                            }
                                            }
                                            </tbody>
                                        </table>
                                    </div>
</body>


@section Scripts{
    <script>


    </script>

}