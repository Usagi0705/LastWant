@using System.Text.Json;
@*@model prjCoreWebWantWant.Models.TaskList*@
@model prjCoreWebWantWant.ViewModels.CCreateTask

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Member/LayoutForMem.cshtml";
}

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    string userDataJson = HttpContextAccessor.HttpContext.Session.GetString(CDictionary.SK_LOGINED_USER);
    CLoginUser loggedInUser = JsonSerializer.Deserialize<CLoginUser>(userDataJson); //loggedInUser的資料型態為MemberAccount這個資料表                                                                                   // 现在 loggedInUser 对象包含了从会话中取出的用户信息
    int id = loggedInUser.AccountId; //抓登入者的id
}


<head>
    <style>

        .btn-outline-info:hover {
            background-color: #528EAF; /* 更改滑鼠滑過的背景顏色 */
            border-color: #528EAF; /* 更改滑鼠滑過的邊框顏色 */
            color: #fff; /* 更改滑鼠滑過的文字顏色 */
        }

        .btn-outline-info {
            border-color: #528EAF; /* 更改滑鼠滑過的邊框顏色 */
            color: #528EAF; /* 更改滑鼠滑過的文字顏色 */
        }

        <link href="~/backstage1/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet" >
        <link href="~/backstage1/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

        <!-- Template Stylesheet -->
        <link href="~/backstage1/css/style.css" rel="stylesheet" >

        <!-- CSS here -->
        <link rel="stylesheet" href="~/backstage/css/price_rangs.css" >               

    </style>

</head>
         
@*<div class="row">
    <div class="col-md-4">*@
    
  
<body>

@*Demo鍵*@
    <div class="mb-3 px-4">
        <button class="btn btn-outline-primary" id="CreateDemo">Demo</button>
    </div>

    <form asp-action="Create" enctype="multipart/form-data" method="post" id="NewForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @*帶入真實accountID，tasklist欄位有*@
        <div class="form-group">
            @* <label asp-for="AccountId" type="hidden" class="control-label"></label>*@
            <input asp-for="AccountId" type="hidden" value="@id" />
            <span asp-validation-for="AccountId" type="hidden" class="text-danger"></span>
        </div>
     
            <div class="container-fluid pt-4 px-4">
            <div class="row g-4">               
      
                <!--任務內容-->
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light rounded h-100 p-4">
                        <h3 class="mb-4" style="color:#528EAF; text-align:center;">任務內容</h3>

                        <input type="hidden" id="hiddenTaskNameIdInput" name="selectedTaskNameId" />
                             <div class="form-floating mb-3">
                                <select class="form-select" id="SelTaskName"
                                        aria-label="Floating label select example">
                                    <option></option>
                                </select>
                                <label for="floatingSelectTown">請選擇任務類型</label>
                            </div>       
                                <div class="form-group">
                                    <label asp-for="TaskTitle" class="control-label"></label>
                                    <input asp-for="TaskTitle" class="form-control" id="txtTaskTitle"/>
                                    <span asp-validation-for="TaskTitle" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="TaskDetail" class="control-label"></label>
                                    @*<input asp-for="TaskDetail" class="form-control" />*@
                            <textarea asp-for="TaskDetail" class="form-control" style="height:100px;resize:none" id="txtTaskDetail"> </textarea>
                                   <span asp-validation-for="TaskDetail" class="text-danger"></span>
                                </div>


                        <div class="form-group">
                                    <label asp-for="RequiredNum" class="control-label"></label>
                            <input asp-for="RequiredNum" class="form-control" id="txtRequiredNum" />
                                    <span asp-validation-for="RequiredNum" class="text-danger"></span>
                                </div>
                         </div>
                </div>

                 <!--任務時間-->
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light rounded h-100 p-4">
                        <h3 class="mb-4" style="color:#528EAF; text-align:center;">任務時間</h3>

                    <div class="form-group">
                        <label asp-for="TaskStartDate" class="control-label"></label>
                        <input asp-for="TaskStartDate" id="taskStartDate" class="form-control" type="date" />
                        <span asp-validation-for="TaskStartDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="TaskEndDate" class="control-label"></label>
                        <input asp-for="TaskEndDate" id="taskEndDate" class="form-control" type="date" />
                        <span asp-validation-for="TaskEndDate" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="TaskStartHour" class="control-label">
                                開始時間，請輸入時段，例如：早班：08：00~16：00
                                <label class="control-label" id="sametaskEndHour"><input type="checkbox" id="sametaskStartHourCheckbox" />不指定時段</label>
                        
                        </label>
                        <input asp-for="TaskStartHour" id="taskStartHour" class="form-control" />
                        <span asp-validation-for="TaskStartHour" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                            <label asp-for="TaskEndHour" class="control-label">
                                結束時間，請輸入時段，例如：中班：13：00~17：00，若無則免填
                                　　<label class="control-label" id="sametaskEndHour"><input type="checkbox" id="sametaskEndHourCheckbox" />同上</label>
                            </label>                           
                            <input asp-for="TaskEndHour" id="taskEndHour" class="form-control" />
                            <span asp-validation-for="TaskEndHour" class="text-danger"></span>
                        </div>

                     

                </div>
                </div>

                <!--任務地點-->
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light rounded h-100 p-4">
                        <h3 class="mb-4" style="color:#528EAF; text-align:center;">任務地點</h3>
                   
                        <div class="form-check form-check-inline" >
                            <input class="form-check-input" type="radio" name="inlineRadioOptionsPlace" id="inlineRadioHome"
                                   value="true"  checked>
                            <label class="form-check-label" for="inlineRadioHome">在家兼職</label>
                        </div>

                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="inlineRadioOptionsPlace" id="inlineRadioOtherPlace"
                                   value="false">
                            <label class="form-check-label" for="inlineRadioOtherPlace">指定地點</label>
                        </div>
                        <p></p>
                    
                  

                    <input type="hidden" id="hiddenTownIdInput" name="selectedTownId" />
                    <div class="form-floating mb-3">
                        <select class="form-select" id="selCity">                            
                            <option></option>
                        </select>
                        <label for="floatingSelectCity">請選擇縣市</label>
                    </div>
                    <div class="form-floating mb-3">
                        <select class="form-select" id="selTown">                          
                            <option></option>
                        </select>
                        <label for="floatingSelectTown">請選擇區域</label>
                    </div>
                    <div class="form-group">
                        <label asp-for="Address" class="control-label"></label>
                            <input asp-for="Address" class="form-control" id="txtAddress" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                    </div>
                </div>

                <!--任務報酬-->
                 <div class="col-sm-12 col-xl-6">
                            <div class="bg-light rounded h-100 p-4">
                        <h3 class="mb-4" style="color:#528EAF; text-align:center;">任務報酬</h3>
          
                    <div class="form-group">
                        <label asp-for="PayFrom" class="control-label"></label>
                          <input asp-for="PayFrom" class="form-control" id="txtPayFrom" />
                        <span asp-validation-for="PayFrom" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                            <label asp-for="PayTo" class="control-label">
                                <label class="control-label" id="samePayTo">最高金額　　<input type="checkbox" id="samePayToCheckbox" />同上</label>
                            </label>
                        <input asp-for="PayTo" class="form-control" id="txtPayTo" />
                        <span asp-validation-for="PayTo" class="text-danger"></span>
                    </div>
                    <p></p>
                  <input type="hidden" id="hiddenPaymentIdInput" name="selectedPaymentId"/>
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelPayment"
                                    aria-label="Floating label select example">
                                <option></option>
                            </select>
                            <label for="floatingSelectPayment">支薪方式</label>
                        </div>

                   <input type="hidden" id="hiddenPaymentDateIdInput" name="selectedPaymentDateId" />
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelPaymentDate"
                                    aria-label="Floating label select example">
                                <option></option>
                            </select>
                            <label for="floatingSelectPaymentDate">支薪日</label>
                        </div>
                    </div>
               </div>

                <!--專業需求(選填)-->
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light rounded h-100 p-4">
                        <h3 class="mb-4" style="color:#528EAF; text-align:center;">專業需求(選填)</h3>

                        @*技能1*@
                        <input type="hidden" id="hiddenSkillIdInput" name="selectedSkillId" />                        
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelSkillBig">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇技能分類</label>
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelSkillSmall">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇技能</label>
                        </div>

                        @*技能2*@
                     @* <input type="hidden" id="hiddenSkillIdInput" name="selectedSkillId2" />
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelSkillBig">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇技能分類</label>
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelSkillSmall">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇技能</label>
                        </div>*@

                        @*技能3*@
                     @*   <input type="hidden" id="hiddenSkillIdInput" name="selectedSkillId3" />
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelSkillBig">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇技能分類</label>
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelSkillSmall">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇技能</label>
                        </div>*@


                        @*證照1*@
                        <input type="hidden" id="hiddenCerIdInput" name="selectedCerId" />
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelCerBig">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇證照分類</label>
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelCerSmall">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇證照</label>
                        </div>

                         @*證照2*@
                   @*     <input type="hidden" id="hiddenCerIdInput" name="selectedCerId2" />
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelCerBig">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇證照分類</label>
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelCerSmall">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇證照</label>
                        </div>*@

                        @*證照3*@
                   @*     <input type="hidden" id="hiddenCerIdInput" name="selectedCerId3" />
                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelCerBig">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇證照分類</label>
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select" id="SelCerSmall">
                                <option></option>
                            </select>
                            <label for="floatingSelectCity">請選擇證照</label>
                        </div>*@


                    </div>
                </div>

                <!--任務照片(選填)-->            
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light rounded h-100 p-4">                       
                        <h3 class="mb-4" style="color:#528EAF; text-align:center;">任務照片(選填)</h3>
                        <input type="hidden" id="hiddenOnePhotoInput" name="selectedPhoto" />
                        <div class="mb-3">
                            @*<label for="formFile" class="form-label">Default file input example</label>*@
                            <input class="form-control" type="file" id="photoInput" name="imageFile" asp-for="Photo">
                            <span id="photoError" class="text-danger"></span>

                            <div id="photoPreview"></div>
                        </div>

                       @*多選照片 <div class="mb-3">
                            <label for="formFileMultiple" class="form-label">Multiple files input example</label>
                            <input class="form-control" type="file" id="formFileMultiple" multiple>
                        </div>*@
                    </div>
                </div>

                <!--送出按鈕-->
                <div class="d-flex justify-content-center">
                      <div class="col-sm-12 col-xl-6">
                           <div class="bg-light rounded h-100 p-4">
                                <div class="d-flex justify-content-center">
                                 <div class="form-group">

                                    <div class="d-flex justify-content-center">
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="publishornot" id="publish" value="立刻上架">
                                            <label class="form-check-label" for="publish">立刻上架</label>
                                        </div>

                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="publishornot" id="nopublish" value="延後上架">
                                            <label class="form-check-label" for="nopublish">延後上架</label>
                                        </div>
                                    </div>

                                    <input type="submit" value="送出" class="btn btn-outline-info" id="New" />
                                    <a asp-action="Create" class="btn btn-outline-info">取消新增</a>
                                    </div>
                                 </div>
                          </div>
                      </div>
                </div>
                

                </div>
            </div>
       </form>

    @*不要顯示的欄位

    <div class="form-group">
    <label asp-for="TownId" class="control-label"></label>
    <input asp-for="TownId" class="form-control" />
    <span asp-validation-for="TownId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="Requirement" class="control-label"></label>
    <input asp-for="Requirement" class="form-control" />
    <span asp-validation-for="Requirement" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="LanguageRequired" class="control-label"></label>
    <input asp-for="LanguageRequired" class="form-control" />
    <span asp-validation-for="LanguageRequired" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="PublishStart" class="control-label"></label>
    <input asp-for="PublishStart" class="form-control" />
    <span asp-validation-for="PublishStart" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="PublishEnd" class="control-label"></label>
    <input asp-for="PublishEnd" class="form-control" />
    <span asp-validation-for="PublishEnd" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="OnTop" class="control-label"></label>
    <input asp-for="OnTop" class="form-control" />
    <span asp-validation-for="OnTop" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="CaseId" class="control-label"></label>
    <input asp-for="CaseId" class="form-control" />
    <span asp-validation-for="CaseId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="AccountId" class="control-label"></label>
    <input asp-for="AccountId" class="form-control" />
    <span asp-validation-for="AccountId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="TaskNameId" class="control-label"></label>
    <input asp-for="TaskNameId" class="form-control" />
    <span asp-validation-for="TaskNameId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="SalaryId" class="control-label"></label>
    <input asp-for="SalaryId" class="form-control" />
    <span asp-validation-for="SalaryId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="TaskPlace" class="control-label"></label>
    <input asp-for="TaskPlace" class="form-control" />
    <span asp-validation-for="TaskPlace" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="WorkPlace" class="control-label"></label>
    <input asp-for="WorkPlace" class="form-control" />
    <span asp-validation-for="WorkPlace" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="TaskPeriod" class="control-label"></label>
    <input asp-for="TaskPeriod" class="form-control" />
    <span asp-validation-for="TaskPeriod" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="WorkingHoursId" class="control-label"></label>
    <input asp-for="WorkingHoursId" class="form-control" />
    <span asp-validation-for="WorkingHoursId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="HumanList" class="control-label"></label>
    <input asp-for="HumanList" class="form-control" />
    <span asp-validation-for="HumanList" class="text-danger"></span>
    </div>
    
     <div class="form-group">
    <label asp-for="PublishOrNot" class="control-label"></label>
    <input asp-for="PublishOrNot" class="form-control" />
    <span asp-validation-for="PublishOrNot" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="PaymentId" class="control-label"></label>
    <input asp-for="PaymentId" class="form-control" />
    <span asp-validation-for="PaymentId" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="PaymentDateId" class="control-label"></label>
    <input asp-for="PaymentDateId" class="form-control" />
    <span asp-validation-for="PaymentDateId" class="text-danger"></span>
    </div>
    *@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>

@section Scripts {    
   @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");   
        }

       <script>

     

        //任務類型
        const SelTaskName = document.querySelector('#SelTaskName');
        const hiddenTaskNameIdInput = document.querySelector('#hiddenTaskNameIdInput');

        //select的任務名
        async function loadSelTaskName() {
            const response = await fetch('@Url.Content("~/BackstageTask/TaskName")')
            const datas = await response.json()
            const taskName = datas.map(TaskName=>`<option value="${TaskName}">${TaskName}</option>`);
            document.querySelector('#SelTaskName').innerHTML = taskName.join("");
            getTaskNameId();
        }

        loadSelTaskName();

        async function getTaskNameId() {
            const response = await fetch(`@Url.Content("~/BackstageTask/GetTaskNameId")?taskname=${SelTaskName.value}`);
            const data = await response.json();
            const selectedTaskNameId = data[0]; // 由於後端程式碼回傳的是 IEnumerable<TaskNameId>，這裡選取第一個元素
            hiddenTaskNameIdInput.value = selectedTaskNameId;
        }

        SelTaskName.addEventListener('change', () => {
            getTaskNameId();
        });

        //支薪方式
        const SelPayment = document.querySelector('#SelPayment');
        const hiddenPaymentIdInput = document.querySelector('#hiddenPaymentIdInput');

        //select的支薪方式
        async function loadSelPayment() {
            const response = await fetch('@Url.Content("~/BackstageTask/Payment")')
            const datas = await response.json()
            const Payment = datas.map(Payment =>`<option value="${Payment}">${Payment}</option>`);
            document.querySelector('#SelPayment').innerHTML = Payment.join("");
        }

        loadSelPayment();

        async function getPaymentId() {
            const response = await fetch(`@Url.Content("~/BackstageTask/GetPaymentId")?payment=${SelPayment.value}`);
            const data = await response.json();
            const selectedPaymentId = data[0]; // 由於後端程式碼回傳的是 IEnumerable<TaskNameId>，這裡選取第一個元素
            hiddenPaymentIdInput.value = selectedPaymentId;
        }

        SelPayment.addEventListener('change', () => {
            getPaymentId();
        });


        //支薪日
        const SelPaymentDate = document.querySelector('#SelPaymentDate');
        const hiddenPaymentDateIdInput = document.querySelector('#hiddenPaymentDateIdInput');

        //select的支薪日
        async function loadSelPaymentDate() {
            const response = await fetch('@Url.Content("~/BackstageTask/PaymentDate")')
            const datas = await response.json()
            const PaymentDate = datas.map(PaymentDate =>`<option value="${PaymentDate}">${PaymentDate}</option>`);
            document.querySelector('#SelPaymentDate').innerHTML=PaymentDate.join("");
        }

        loadSelPaymentDate();

        async function getPaymentDateId() {
            const response = await fetch(`@Url.Content("~/BackstageTask/GetPaymentDateId")?paymentDate=${SelPaymentDate.value}`);
            const data = await response.json();
            const selectedPaymentDateId = data[0]; // 由於後端程式碼回傳的是 IEnumerable<PaymenDateId>，這裡選取第一個元素
            hiddenPaymentDateIdInput.value = selectedPaymentDateId;
        }

        SelPaymentDate.addEventListener('change', () => {
            getPaymentDateId();
        });               

        //技能大小項       
        const SelSkillBig = document.querySelector('#SelSkillBig');
        const SelSkillSmall = document.querySelector('#SelSkillSmall');
        const hiddenSkillIdInput = document.querySelector('#hiddenSkillIdInput');

        //select的技能分類
        async function loadSelSkillBig() {
            const response = await fetch('@Url.Content("~/BackstageTask/SkillBig")')
            const datas = await response.json()
            const skillBig = datas.map(SkillTypeName => `<option value="${SkillTypeName}">${SkillTypeName}</option>`);
            document.querySelector('#SelSkillBig').innerHTML = skillBig.join("");

            loadSelSkillSmall();
        }

        loadSelSkillBig();

        //select的技能小項
        async function loadSelSkillSmall() {
            const response = await fetch(`@Url.Content("~/BackstageTask/SkillSmall")?SkillBig=${SelSkillBig.value}`);
            const datas = await response.json()
            const skillSmall = datas.map(SkillName => `<option value='${SkillName}'>${SkillName}</option>`);
            SelSkillSmall.innerHTML = skillSmall.join("");
            getSkillId();
        }

        async function getSkillId() {
            const response = await fetch(`@Url.Content("~/BackstageTask/GetSkillId")?skillBig=${SelSkillBig.value}&skillSmall=${SelSkillSmall.value}`);
            const data = await response.json();
            const selectedSkillId= data[0]; // 由於後端程式碼回傳的是 IEnumerable<TownId>，這裡選取第一個元素
            hiddenSkillIdInput.value = selectedSkillId;
        }

        //loadSelSkillSmall();

        SelSkillBig.addEventListener('change', () => {
            loadSelSkillSmall();
        });

        SelSkillSmall.addEventListener('change', () => {
            getSkillId();
        });

        //證照的標籤
        const SelCerBig = document.querySelector('#SelCerBig');
        const SelCerSmall = document.querySelector('#SelCerSmall');
        const hiddenCerIdInput = document.querySelector('#hiddenCerIdInput');

        //select的證照分類
        async function loadSelCerBig() {
            const response = await fetch('@Url.Content("~/BackstageTask/CerBig")')
            const datas = await response.json()
            const CerBig = datas.map(CertificateTypeName => `<option value="${CertificateTypeName}">${CertificateTypeName}</option>`);
            document.querySelector('#SelCerBig').innerHTML = CerBig.join("");

            loadSelCerSmall();
        }

        loadSelCerBig();

        //select的證照小項
        async function loadSelCerSmall() {
            const response = await fetch(`@Url.Content("~/BackstageTask/CerSmall")?CerBig=${SelCerBig.value}`);
            const datas = await response.json()
            const CerSmall = datas.map(CertificateName => `<option value='${CertificateName}'>${CertificateName}</option>`);
            SelCerSmall.innerHTML = CerSmall.join("");
            getCerId()
        }

        loadSelCerSmall();

        async function getCerId() {
            const response = await fetch(`@Url.Content("~/BackstageTask/GetCerId")?cerBig=${SelCerBig.value}&cerSmall=${SelCerSmall.value}`);
            const data = await response.json();
            const selectedCerId = data[0]; // 由於後端程式碼回傳的是 IEnumerable<TownId>，這裡選取第一個元素
            hiddenCerIdInput.value = selectedCerId;
        }

        SelCerBig.addEventListener('change', () => {
            loadSelCerSmall();
        });

        SelCerSmall.addEventListener('change', () => {
            getCerId();
        });

        //城市和鄉鎮的標籤
        const selCity = document.querySelector('#selCity');
        const selTown = document.querySelector('#selTown');
        const hiddenTownIdInput = document.querySelector('#hiddenTownIdInput');

        //select的城市
        async function loadCity() {
            const response = await fetch('@Url.Content("~/BackstageTask/Cities")')
            const datas = await response.json()
            const cities = datas.map(City =>`<option value="${City}">${City}</option>`);
            document.querySelector('#selCity').innerHTML = cities.join("");

            loadDistrict();
        }

        loadCity();

        //select的區域
        async function loadDistrict() {
            const response = await fetch(`@Url.Content("~/BackstageTask/Districts")?City=${selCity.value}`);
            const datas = await response.json()
            const districts = datas.map(Town =>`<option value='${Town}'>${Town}</option>`);
            selTown.innerHTML = districts.join("");
            getTownId();
        }

        
        async function getTownId() {
            const response = await fetch(`@Url.Content("~/BackstageTask/GetTownId")?City=${selCity.value}&District=${selTown.value}`);
            const data = await response.json();
            const selectedTownId = data[0]; // 由於後端程式碼回傳的是 IEnumerable<TownId>，這裡選取第一個元素
            hiddenTownIdInput.value = selectedTownId;
        }

        //loadDistrict();

        selCity.addEventListener('change', () => {
            loadDistrict();
        });

       selTown.addEventListener('change', () => {
            getTownId();
        });
               
        //開始結束日期時間防呆，開始不能小於今天，結束不能小於開始
        const taskStartDateInput = document.getElementById("taskStartDate");
        const taskEndDateInput = document.getElementById("taskEndDate");
        const taskStartHourInput = document.getElementById("taskStartHour");
        const taskEndHourInput = document.getElementById("taskEndHour");

        //開始日期的驗證，可以選當天當下之後的時間
        taskStartDateInput.addEventListener("change", function() {
        const startDate = new Date(taskStartDateInput.value);
        const currentDate = new Date();
        currentDate.setHours(0, 0, 0, 0);

        if (startDate < currentDate) {
            Swal.fire({
                icon: "error",
                title: "錯誤",
                text: "開始日期不能小於當天日期，請重新選擇",
                confirmButtonText: "確定",
            }).then(() => {
                taskStartDateInput.value = "";
            });
        }
    });

       /* 舊的開始日期驗證
       taskStartDateInput.addEventListener("change", function () {
            const startDate = new Date(taskStartDateInput.value);
            const currentDate = new Date();

            if (startDate < currentDate) {
                Swal.fire({
                    icon: "error",
                    title: "錯誤",
                    text: "開始日期不能小於當天日期。",
                    confirmButtonText: "確定",
                }).then(() => {
                    taskStartDateInput.value = "";
                });
            }
        });
*/
        taskEndDateInput.addEventListener("change", function () {
            const startDate = new Date(taskStartDateInput.value);
            const endDate = new Date(taskEndDateInput.value);

            if (endDate < startDate) {
                Swal.fire({
                    icon: "error",
                    title: "錯誤",
                    text: "結束日期不能小於開始日期，請重新選擇",
                    confirmButtonText: "確定",
                }).then(() => {
                    taskEndDateInput.value = "";
                });
            }
        });

        /*//開始時間
        taskStartHourInput.addEventListener("change", function () {
            const startDate = new Date(taskStartDateInput.value + " " + taskStartHourInput.value);
            const currentDate = new Date();

            if (startDate < currentDate) {
                Swal.fire({
                    icon: "error",
                    title: "錯誤",
                    text: "開始時間不能小於當下時間。",
                    confirmButtonText: "確定",
                }).then(() => {
                    taskStartHourInput.value = "";
                });
            }
        });
*/
      /*  taskStartHourInput.addEventListener("input", function () {
            const inputValue = taskStartHourInput.value;
            if (inputValue.length === 4) {
                const formattedTime = inputValue.substring(0, 2) + ":" + inputValue.substring(2, 4);
                taskStartHourInput.value = formattedTime;
            }
        });*/

        /*//結束時間
        taskEndHourInput.addEventListener("change", function () {
            const startDate = new Date(taskStartDateInput.value + " " + taskStartHourInput.value);
            const endDate = new Date(taskEndDateInput.value + " " + taskEndHourInput.value);

            if (endDate < startDate) {
                Swal.fire({
                    icon: "error",
                    title: "錯誤",
                    text: "結束時間不能小於開始時間。",
                    confirmButtonText: "確定",
                }).then(() => {
                    taskEndHourInput.value = "";
                });
            }
        });*/

     /*   taskEndHourInput.addEventListener("input", function () {
            const inputValue = taskEndHourInput.value;
            if (inputValue.length === 4) {
                const formattedTime = inputValue.substring(0, 2) + ":" + inputValue.substring(2, 4);
                taskEndHourInput.value = formattedTime;
            }
        });*/

        


        //demo鍵
        const CreateDemo = document.querySelector('#CreateDemo');
        const txtTaskTitle = document.querySelector('#txtTaskTitle');
        const txtTaskDetail = document.querySelector('#txtTaskDetail');
        const txtRequiredNum = document.querySelector('#txtRequiredNum');
        const taskStartHour = document.querySelector('#taskStartHour');
        const taskEndHour = document.querySelector('#taskEndHour');
        const txtPayFrom = document.querySelector('#txtPayFrom');
        const txtPayTo = document.querySelector('#txtPayTo');
        //const txtAddress = document.querySelector('#txtAddress');
       

        CreateDemo.addEventListener('click', () => {
            txtTaskTitle.value = "模型設計及製作"
            txtTaskDetail.value = "【處理事項】：依照給予的圖片做成3D模型並且可活動"
            txtRequiredNum.value = "1"
            taskStartHour.value = "不指定時段"
            taskEndHour.value = ""
            txtPayFrom.value = "1000"
            txtPayTo.value = "1000"
            //txtAddress.value = ""
            /* SelTaskName.selectedIndex=1*/
           /*  SelPayment.selectedIndex=2*/
            /*SelPaymentDate.selectedIndex = 2*/
           /* hiddenPaymentDateIdInput.value =1;*/

        })


        //同上checkbox
        const samePayToCheckbox = document.querySelector('#samePayToCheckbox');
        const taskEndHourCheckbox = document.querySelector('#taskEndHourCheckbox');
        const sametaskStartHourCheckbox = document.querySelector('#sametaskStartHourCheckbox');

        //價格同上checkbox
        samePayToCheckbox.addEventListener('click', function () {
            // 复选框状态改变时的处理
            if (samePayToCheckbox.checked) {
                txtPayTo.value = txtPayFrom.value;
            } else {
                txtPayTo.value = '';
            }
        });

        //時間同上checkbox
        sametaskEndHourCheckbox.addEventListener('click', function () {
            // 复选框状态改变时的处理
            if (sametaskEndHourCheckbox.checked) {
                taskEndHour.value = taskStartHour.value;
            } else {
                taskEndHour.value = '';
            }
        });

        //不指定時段checkbox
        sametaskStartHourCheckbox.addEventListener('click', function () {
            // 复选框状态改变时的处理
            if (sametaskStartHourCheckbox.checked) {
                taskStartHour.value = '不指定時段';
            } else {
                taskStartHour.value = '';
            }
        });



        //照片預覽
        const photoInput = document.getElementById('photoInput');
        const photoPreview = document.getElementById('photoPreview');

        // 當使用者選擇檔案時觸發事件
        photoInput.addEventListener('change', function () {
            const selectedFile = photoInput.files[0];

            if (selectedFile) {
                // 檢查是否是圖片類型
                if (selectedFile.type.startsWith('image/')) {
                    // 創建一個圖片元素，設置其 src 屬性為選擇的圖片
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(selectedFile);
                    const New = document.querySelector('#New');
                    New.disabled = false;
                    /*  img.style.maxWidth = '100%';
                     img.style.height = 'auto'; */

                    img.width = 360;
                    img.height = 360;
                    // 清空預覽元素的內容，然後添加新的圖片
                    photoPreview.innerHTML = '';
                    photoPreview.appendChild(img);

                    // 清除可能的錯誤訊息
                    const photoError = document.getElementById('photoError');
                    photoError.textContent = '';
                } else {
                    // 如果選擇的檔案不是圖片，顯示錯誤訊息
                    const photoError = document.getElementById('photoError');
                    photoError.textContent = '你選擇的不是圖片唷，請重新選擇';
                    photoPreview.innerHTML = '';

                    const New = document.querySelector('#New');
                    New.disabled = true;
                    /* New.style.backgroundColor = 'red'; */
                    /* New.textContent = '請選擇正確的圖片'; */
                }
            } else {
                // 如果未選擇檔案，清空預覽元素
                photoPreview.innerHTML = '';
                const photoError = document.getElementById('photoError');
                photoError.textContent = '';
            }
        });


        //在家兼職和指定地點的radio，點選指定地點才能選擇縣市地址
    /*    const inlineRadioHome = document.getElementById("inlineRadioHome");
        const inlineRadioOtherPlace = document.getElementById("inlineRadioOtherPlace");*/

        document.addEventListener("DOMContentLoaded", function () {
            console.log("DOMContentLoaded")
            const inlineRadioHome = document.getElementById("inlineRadioHome");
            const inlineRadioOtherPlace = document.getElementById("inlineRadioOtherPlace");
            const selCity = document.getElementById("selCity");
            const selTown = document.getElementById("selTown");
            const addressInput = document.getElementById("txtAddress");

           /* selCity.disabled = true;
            selTown.disabled = true;
            addressInput.disabled = true;*/

            function updateFieldsAvailability() {
                console.log('change')
                if (inlineRadioHome.checked) {
                    selCity.setAttribute('disabled','disabled');
                    selTown.setAttribute('disabled', 'disabled');
                    addressInput.setAttribute('disabled', 'disabled');
                } else if (inlineRadioOtherPlace.checked) {
                    selCity.removeAttribute('disabled');
                    selTown.removeAttribute('disabled');
                    addressInput.removeAttribute('disabled');
                }
            }

            inlineRadioHome.addEventListener("change", updateFieldsAvailability);
            inlineRadioOtherPlace.addEventListener("change", updateFieldsAvailability);

            updateFieldsAvailability(); // 初始狀態
        });

       //create的送出sweet alert
      /*  document.getElementById('New').addEventListener('click', function (e) {
            e.preventDefault();

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: '確定要新增任務嗎？',
                text: '我同意WantWant刊登任務條款',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: '下一步',
                cancelButtonText: '取消',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        '恭喜新增成功了!',
                        '',
                        'success'
                    );

                    // 在這裡執行送出任務的相關程式碼
                    document.getElementById('NewForm').submit();
                }
            });
        });*/


        document.getElementById('New').addEventListener('click', async function (e) {
            e.preventDefault();

            const { value: accept } = await Swal.fire({
                title: '確定要新增任務嗎？',
                input: 'checkbox',
                inputValue: 1,
                inputPlaceholder: '我同意WantWant刊登任務條款',
                showCancelButton: true,
                cancelButtonText: '取消',
                cancelButtonColor: '#FF5151',
                confirmButtonText: '下一步',
                confirmButtonColor: '#528EAF',               
                inputValidator: (result) => {
                    return !result && '你需要同意條款和條件';
                }
            });

            if (accept) {
             /*   Swal.fire('恭喜新增成功！', '呀逼:)', 'success');
                // 在這裡執行送出任務的相關程式碼
                document.getElementById('NewForm').submit();*/

                Swal.fire({
                    title: '恭喜新增成功！',
                    text: '呀逼:)',
                    icon: 'success',
                    confirmButtonColor: '#528EAF',
                    confirmButtonText: '好唷！',
                    showConfirmButton: true // 顯示確認按鈕
                }).then((result) => {
                    if (result.isConfirmed) {
                        // 在這裡執行送出任務的相關程式碼
                        document.getElementById('NewForm').submit();
                    }
                });


            }
        });

      

    </script>
}

@section subTitle{


    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">會員專區</li>
            <li class="breadcrumb-item">找人才</li>
            <li class="breadcrumb-item " aria-current="page">發案管理</li>
        </ol>
    </nav>
}


